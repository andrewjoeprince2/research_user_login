<?php
	require_once('phpscripts/config.php');
	confirm_logged_in();

if(isset($_POST['submit'])){

	$fname = trim($_POST['fname']);
	$username = trim($_POST['username']);
	//not needed anymore, password is being generated
	//$password = trim($_POST['password']);

	//PHP function to generate random string - https://www.youtube.com/watch?v=RhHGdDjvvZ0 2:40-4:30
	$passChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	$randomPass = substr(str_shuffle($passChars), 0, 10); //string shuffle the passChars variable

  //--------------------------------------------------------------------------------------------
	//Note
	//I stored the randomPass variable in the database as well, simply
	//to make it easier for me during testing purposes (didn't need to get an email every time)
	//Obviously, I would not have this column in a real life scenerio, as that's a big
	//security flaw, and defeats the purpose of encryption. Figured I would keep it in case
	//the mail function to get the generated password doesn't work for you.
	//--------------------------------------------------------------------------------------------

	//Then, set the password variable to the random pass, but hash it first (encrypt) before it goes in the database
	//Learned about the built in password_hash function on http://php.net/manual/en/function.password-hash.php - specifically example 2
	$password = password_hash($randomPass, PASSWORD_BCRYPT, ['cost => 11']);


	$email = trim($_POST['email']);
	$lvllist = $_POST['lvllist'];
	if(empty($lvllist)){
		$message = "Please select a user level.";
	} elseif(empty($fname)){
		$message = "Please fill out all of the fields.";
	}
	else{

		//If successful, save variables for mail function
		$to = $email; //send mail to the email inputted

		$subject = "Welcome to Evil Corp, $fname!"; //subject

		$msg = "Welcome to Evil Corp, $fname!\n
		Your user account has just been created.\n
		Your credentials:\n
		Username: $username\n
		Temporary Password: $password\n
		Please visit http://localhost/research_user_login/admin/admin_login.php to confirm your account!\n
		"; //create message body

		//mail($to, $subject, $msg); //then, just send the email

		$result = createUser($fname, $username, $password, $email, $lvllist, $randomPass);
		$message = $result;

	}
}

?>
<!doctype html>
<html class="no-js" lang="en">
  <head>
  <?php include('../includes/head.php'); ?>
  <title>Dashboard - Evil Corp</title>
  </head>

  <body id="adminIndex">

	<?php include('includes/header.php'); ?>


	<div class="row">
	<div class="small-12 columns" id="userForm">
	<h2>Create User</h2>
	<p>Complete this form to add a new user to the client dashboard. Ensure to select their user level to set their desired permsission settings.</p>
	<p>If you don't, they will delete the entire database!</p>
	<p>Please Note - A temporary password will be generated by the system and given to the user.</p>

	<?php if(!empty($message)){echo "<p class=\"error\"> $message</p>";} ?>
	<form action="admin_createuser.php" method="post">
		<label>First Name:</label>
		<input type="text" name="fname" value="">

		<label>Username:</label>
		<input type="text" name="username" value="">

		<!--<label>Password:</label>
		<input type="text" name="password" value="">-->

		<label>Email:</label>
		<input type="text" name="email" value="">

		<label>User Permissions Level:</label>
		<select name="lvllist">
			<option value="">Select User Level</option>
			<option value="2">Web Admin</option>
			<option value="1">Web Master</option>
		</select>

		<input type="submit" name="submit" value="Create User" class="submitBut">

	</form>
</div>
</div>

</body>
</html>
